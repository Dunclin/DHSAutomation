// Example Firebase Cloud Function to create a Zoom Meeting SDK signature
// Deploy this and put its URL in config.js as ZOOM_SIGNATURE_ENDPOINT
// DO NOT expose your SDK secret in the browser.

const functions = require('firebase-functions');
const cors = require('cors')({ origin: true });
const jwt = require('jsonwebtoken');

// Set via Functions config (firebase functions:config:set zoom.key="..." zoom.secret="...")
const sdkKey = process.env.ZOOM_SDK_KEY || functions.config().zoom.key;
const sdkSecret = process.env.ZOOM_SDK_SECRET || functions.config().zoom.secret;

exports.zoomSignature = functions.https.onRequest((req, res) => {
  cors(req, res, async () => {
    if (req.method !== 'POST') {
      return res.status(405).send('Method not allowed');
    }
    const { meetingNumber, role } = req.body || {};
    if (!meetingNumber) return res.status(400).json({ error: 'missing meetingNumber' });
    const iat = Math.floor(Date.now() / 1000) - 30;
    const exp = iat + 60 * 2;

    const oHeader = { alg: 'HS256', typ: 'JWT', };
    const oPayload = {
      sdkKey: sdkKey,
      mn: meetingNumber,
      role: Number(role) || 0,
      iat, exp,
      appKey: sdkKey,
      tokenExp: exp
    };

    try {
      const signature = jwt.sign(oPayload, sdkSecret, { header: oHeader });
      return res.json({ signature });
    } catch (e) {
      console.error(e);
      return res.status(500).json({ error: 'failed to sign' });
    }
  });
});
